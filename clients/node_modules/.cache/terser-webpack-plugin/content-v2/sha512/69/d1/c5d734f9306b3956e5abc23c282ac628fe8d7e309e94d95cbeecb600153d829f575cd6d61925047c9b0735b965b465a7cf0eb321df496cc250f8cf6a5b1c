{"code":"!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t){e.exports={Router:function({base:e=\"\",routes:t=[]}={}){return{__proto__:new Proxy({},{get:(r,n,o)=>(r,...a)=>t.push([n.toUpperCase(),RegExp(`^${(e+r).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/\\/$/,\"\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),a])&&o}),routes:t,async handle(e,...r){let n,o,a=new URL(e.url);for(var[s,c,i]of(e.query=Object.fromEntries(a.searchParams),t))if((s===e.method||\"ALL\"===s)&&(o=a.pathname.match(c)))for(var u of(e.params=o.groups,i))if(void 0!==(n=await u(e.proxy||e,...r)))return n}}}}},function(e,t,r){\"use strict\";r.r(t);var n=r(0);const o=Object(n.Router)();async function a(e,t){return new Response(JSON.stringify(e),{...t,headers:{\"content-type\":\"application/json;charset=UTF-8\",\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Methods\":\"GET,POST,PUT,DELETE,HEAD,OPTIONS\",\"Access-Control-Allow-Headers\":\"content-type\",\"Access-Control-Max-Age\":\"86400\"}})}o.get(\"/\",async()=>a(await CLIENTS.list())),o.get(\"/:id\",async({params:e})=>{const t=await CLIENTS.get(e.id);return a(JSON.parse(t))}),o.post(\"/:id\",async e=>{const t=await e.json();console.log(\"istrav\",t);let r=e.params;return a(await CLIENTS.put(r.id,t))}),o.delete(\"/:id\",async({params:e})=>a(await CLIENTS.delete(e.id))),o.all(\"*\",()=>new Response(\"Not Found.\",{status:404})),addEventListener(\"fetch\",e=>e.respondWith(o.handle(e.request)))}]);","extractedComments":[]}